Two sum Problem

// Input: nums = [2,7,11,15], target = 9
// Output: [0,1]
// Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].



class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        
   unordered_map<int ,int > map;
   
    for(int i=0;i<nums.size();i++){
         int value =target-nums[i];

         if(map.find(value)==map.end()){
             map.insert(make_pair(nums[i],i));
         }

         else
         return {map[value],i};
    }

      
        return {-1,-1};
    }
};
