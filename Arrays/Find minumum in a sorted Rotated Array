Suppose an array of length n sorted in ascending order is rotated between 1 and n times. For example, the array nums = [0,1,2,4,5,6,7] might become:

[4,5,6,7,0,1,2] if it was rotated 4 times.
[0,1,2,4,5,6,7] if it was rotated 7 times.

Example 1:

Input: nums = [3,4,5,1,2]
Output: 1
Explanation: The original array was [1,2,3,4,5] rotated 3 times.


APPROACH : 1

class Solution
{
  public int findMin(int[] nums)
{
  int min =nums[0];
   for(int i=0;i<nums.length;i++)
   { 
     if(nums[i]<min)
     min =nums[i];
   }
    return min;
  }
}



APPROACH :2

class Solution {
  public int findMin(int[] nums) {
    int start = 0;
    int end = nums.length - 1;

    while (start < end) {
       int mid = (start + end) / 2;
      if (nums[mid] < nums[end])
        end = mid;
      else
        start = mid + 1;
    }

    return nums[start];
  }
}
